<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChromeTabs">

    <SolidColorBrush x:Key="TitleBarButton.MouseOverColor" Color="#7F7F7F" Opacity="0.2"/>

    <Style TargetType="Grid" x:Key="RootGridChromeStyle">
        <Style.Triggers>
            <!-- Add to avoid border disappearing when window is maximised -->
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                      Value="Maximized">
                <Setter Property="Margin" Value="6"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                      Value="Normal">
                <Setter Property="Margin" Value="2,1,2,0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleBarButtonBase" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style x:Key="TitleBarButtonStyle" BasedOn="{StaticResource TitleBarButtonBase}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                         Background="{TemplateBinding Background}"
                         BorderThickness="0"
                         SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                         Margin="0"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TitleBarMaximizeButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Style.Triggers>
                    <!-- Trigger when Window is Maximized -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                           Value="Maximized">
                        <Setter Property="Data" Value="M 13.5,12.5 H 20.5 V 19.5 H 13.5 Z M 15.5,12.5 V 10.5 H 22.5 V 17.5 H 20.5"/>
                        <Setter Property="ToolTip" Value="Restore"/>
                    </DataTrigger>

                    <!-- Trigger when Window is Normal (Not Maximized) -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                           Value="Normal">
                        <Setter Property="Data" Value="M 13.5,10.5 H 22.5 V 19.5 H 13.5 Z"/>
                        <Setter Property="ToolTip" Value="Maximize"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TitleBarXButtonStyle" BasedOn="{StaticResource TitleBarButtonBase}"  TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                     Background="{TemplateBinding Background}"
                     BorderThickness="0"
                     SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                     Margin="0"
                     HorizontalAlignment="Center" VerticalAlignment="Center"
                     Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFE81123" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFE81123" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style  x:Key="TitleBarRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                 Background="{TemplateBinding Background}"
                 BorderThickness="0"
                 SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                 Margin="0"
                 HorizontalAlignment="Center" VerticalAlignment="Center"
                 Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}}}"/>
                <Setter Property="StrokeThickness" Value="0.5"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TitleBarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                     Background="{TemplateBinding Background}"
                     BorderThickness="0"
                     SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                     Margin="0"
                     HorizontalAlignment="Center" VerticalAlignment="Center"
                     Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButton.MouseOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="MaxHeight" Value="10"/>
                <Setter Property="MaxWidth" Value="10"/>
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>