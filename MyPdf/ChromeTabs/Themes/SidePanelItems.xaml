<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:history="clr-namespace:MyPdf.HistoryAndUserTags"
                    xmlns:local="clr-namespace:ChromeTabs"
                    xmlns:controls="clr-namespace:MyPdf.ChromeTabs.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CostumeTreeViewItemStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="BorderColorBursh" Color="#7F7F7F" Opacity="0.3"/>
    
    <Style TargetType="TreeView" x:Key="HistoryTreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColorBursh}"/>

        <Style.Resources>
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource CostumeTreeViewItemStyle}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            </Style>
            
            <HierarchicalDataTemplate DataType="{x:Type history:HistoryGroup}"
                                      ItemsSource="{Binding Items}">
                <Border x:Name="border" BorderBrush="{StaticResource BorderColorBursh}" BorderThickness="0">
                    <TextBlock x:Name="textBlock" Text="{Binding Name}" FontSize="14" Margin="3"
                   Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                </Border>

                <!--<DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver}" Value="true">
                        <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                </DataTemplate.Triggers>-->
            </HierarchicalDataTemplate>

            <DataTemplate DataType="{x:Type history:HistoryItem}">
                <Grid x:Name="grid" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Text="{Binding Title}" 
                               FontSize="14" Margin="5,2,5,0"
                               Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                    
                    <TextBlock Grid.Row="1" Text="{Binding Timestamp}" 
                               Margin="5,0,5,2" FontSize="10" Opacity="0.5"
                               Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                </Grid>
                
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver}" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=TouchesOver}" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Style.Resources>
    </Style>

    <Style TargetType="TreeView" x:Key="UserTagsTreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Style.Resources>
            <Style TargetType="ScrollBar" BasedOn="{StaticResource ThemedScrollBar}"/>
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource CostumeTreeViewItemStyle}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type history:UserTagGroup}" ItemsSource="{Binding Children}">
                <Border x:Name="border" BorderBrush="{StaticResource BorderColorBursh}" BorderThickness="0"
                        Padding="3">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="🗀" FontSize="15" Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"
                                   Margin="0,0,5,0"/>
                        <Grid>
                        <controls:EditableTextBlock Text="{Binding Name}" IsTextBox="{Binding IsInitialView}"
                                                    Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </Grid>
                    </StackPanel>
                </Border>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="true">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver}" Value="true">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=TouchesOver}" Value="true">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </HierarchicalDataTemplate>

            <DataTemplate DataType="{x:Type history:UserTagItem}">
                <Grid x:Name="grid" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding Name}"
                             Margin="5,2,5,0"
                             Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>

                    <StackPanel Orientation="Horizontal"  Grid.Row="1" >
                        <TextBlock Text="{Binding FileName}" TextWrapping="WrapWithOverflow"
                             Margin="5,0,0,2" FontSize="10" Opacity="0.5"
                             Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Position, StringFormat=' #{0}'}" 
                               TextWrapping="WrapWithOverflow" FontSize="10" Opacity="0.5"
                             Foreground="{Binding Foreground ,RelativeSource={RelativeSource AncestorType=Window}}"/>
                    </StackPanel>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver}" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=TouchesOver}" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Style.Resources>
    </Style>

    <Style TargetType="Button" x:Key="ThemedButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                          Padding="{TemplateBinding Padding}"
                          MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}"
                          Background="{TemplateBinding Background}"
                          BorderThickness="0"
                          SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BorderColorBursh}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Style>
        </Style.Resources>
    </Style>


</ResourceDictionary>